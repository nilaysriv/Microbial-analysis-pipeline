#Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.metrics.pairwise import pairwise_distances
from sklearn.preprocessing import LabelEncoder
from skbio import diversity
from skbio.diversity import beta_diversity
from skbio.stats.ordination import PCoA
from biom import load_table
from scipy.stats import mannwhitneyu  # Import Mann-Whitney U test


source_file = input("Enter the path to the microbiome data file: ")

#Load microbiome data
biom_table = load_table(source_file)

#Convert BIOM table to a DataFrame
df = biom_table.to_dataframe()

#Data Preprocessing


#Define a threshold for minimum abundance (modify as needed)
min_abundance_threshold = 10

#Remove low-abundance taxa
df_filtered = df[df.sum(axis=1) >= min_abundance_threshold]

# Perform rarefaction to subsample to a fixed depth (modify as needed)
target_depth = 1000  # Modify to your desired depth
np.random.seed(42)  # For reproducibility
sample_sizes = {sample: target_depth for sample in df_filtered.columns}
df_rarefied, _ = df_filtered.subsample(sample_sizes, axis='sample')

#Update the alpha diversity calculation and beta diversity calculation using the preprocessed data
alpha_diversity = diversity.alpha_diversity('shannon', df_rarefied.values.T)
bc_dm = beta_diversity('braycurtis', df_rarefied.values.T)



#Alpha Diversity(Shannon)
alpha_diversity = diversity.alpha_diversity('shannon', df.values.T)

#Beta Diversity (Bray-Curtis Dissimilarity)
bc_dm = beta_diversity('braycurtis', df.values.T)

#Principal Coordinate Analysis (PCoA) for Visualization
pcoa = PCoA(bc_dm)
pcoa.plot(df.sample_metadata, 'SampleType', cmap='viridis')

#Visualize Alpha Diversity
plt.figure(figsize=(8, 6))
plt.hist(alpha_diversity, bins=20, color='skyblue', edgecolor='black')
plt.xlabel('Alpha Diversity (Shannon Index)')
plt.ylabel('Frequency')
plt.title('Alpha Diversity Distribution')
plt.show()

#Mann-Whitney U Test 
# Load sample metadata (modify the path accordingly)
metadata_file = input("Enter the path to the sample metadata file (e.g., 'sample_metadata.csv'): ")
sample_metadata = pd.read_csv(metadata_file)

#Mann-Whitney U test comparing alpha diversity between two groups
group1_alpha = alpha_diversity[sample_metadata['Group'] == 'Control']
group2_alpha = alpha_diversity[sample_metadata['Group'] == 'Treatment']
_, alpha_p_value = mannwhitneyu(group1_alpha, group2_alpha)

#Interpretation for Alpha Diversity
if alpha_p_value < 0.05:
    print(f"Alpha diversity is significantly different between groups (p-value = {alpha_p_value:.4f}).")
else:
    print(f"No significant difference in alpha diversity between groups (p-value = {alpha_p_value:.4f}).")

#Mann-Whitney U Beta
# Assuming you have another metadata column for beta diversity comparison (e.g., 'TreatmentGroup')
beta_group1 = bc_dm[sample_metadata['Group'] == 'Control']
beta_group2 = bc_dm[sample_metadata['Group'] == 'Treatment']
_, beta_p_value = mannwhitneyu(beta_group1, beta_group2)

#Interpretation for Beta Diversity
if beta_p_value < 0.05:
    print(f"Beta diversity is significantly different between groups (p-value = {beta_p_value:.4f}).")
else:
    print(f"No significant difference in beta diversity between groups (p-value = {beta_p_value:.4f}).")

#Principal Coordinate Analysis (PCoA) for Visualization
pcoa = PCoA(bc_dm)

#Plot the PCoA for Beta Diversity
plt.figure(figsize=(8, 6))
plt.scatter(pcoa.samples['PC1'], pcoa.samples['PC2'], c=df.sample_metadata['SampleType'], cmap='viridis')
plt.xlabel('PC1')
plt.ylabel('PC2')
plt.title('PCoA Plot of Beta Diversity')
plt.colorbar(label='Sample Type')
plt.show()
